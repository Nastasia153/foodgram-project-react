version: '3.3'
services:

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/

  # backend:
  #   build:
  #     context: ../backend
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ../backend/:/app/result_build/

  # db:
  #   image: postgres:13.0-alpine
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/
  #   env_file:
  #     - ../backend/.env

  # web:
  #   image:
  #   volumes:
  #     - static_value:/app/static/
  #     - media_value:/app/media/
  #   depends_on:
  #     - db
  #   env_file:
  #     - ../backend/.env



#version: '3.8'
#
#
#services:
#  db:
#    image: postgres:13.0-alpine
#    volumes:
#      - postgres_data:/var/lib/postgresql/data/
#    env_file:
#      - ./.env
#
#  backend:
#    image:
#    restart: always
#    volumes:
#      - static_value:/app/foodgram/static/
#      - media_value:/app/foodgram/media/
#    depends_on:
#      - db
#    env_file:
#      - ./.env
#
#  frontend:
#    build:
#      context: ../frontend
#      dockerfile: Dockerfile
#    volumes:
#      - ../frontend/:/app/result_build/
#
#
#  nginx:
#    image: nginx:1.21.3-alpine
#    ports:
#      - "80:80"
#    volumes:
#      - ./nginx.conf:/etc/nginx/conf.d/default.conf
#      - ../frontend/build:/usr/share/nginx/html/
#      - ../docs/:/usr/share/nginx/html/api/docs/
#      - static_value:/var/html/static/
#      - media_value:/var/html/media/
#    depends_on:
#      - backend
#      - frontend
#
#volumes:
#  postgres_data:
#  static_value:
#  media_value: