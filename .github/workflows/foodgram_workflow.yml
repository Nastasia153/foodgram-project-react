## This is a basic workflow to help you get started with Actions
#
#name: CI
#
## Controls when the workflow will run
#on:
#  # Triggers the workflow on push or pull request events but only for the master branch
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
#
#  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:
#
## A workflow run is made up of one or more jobs that can run sequentially or in parallel
#jobs:
#  # This workflow contains a single job called "build"
#  build:
#    # The type of runner that the job will run on
#    runs-on: ubuntu-latest
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - uses: actions/checkout@v3
#
#      # Runs a single command using the runners shell
#      - name: Run a one-line script
#        run: echo Hello, world!
#
#      # Runs a set of commands using the runners shell
#      - name: Run a multi-line script
#        run: |
#          echo Add other actions to build,
#          echo test, and deploy your project.
#name: Yamdb workflow
#
#on: [push]
#
#jobs:
#  tests:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.7
#
#      - name: Install dependences
#        run: |
#          python -m pip install --upgrade pip
#          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
#          cd api_yamdb/
#          pip install -r requirements.txt
#
#      - name: Test with flake8 and pytest
#        run: |
#          python -m flake8
#          python -m pytest
#
#  build_and_push_to_docker_hub:
#    name: Push Docker image to Docker Hub
#    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
#    runs-on: ubuntu-latest
#    needs: tests
#    steps:
#      - name: Check out the repo
#        uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Login to Docker
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Push to Docker Hub
#        uses: docker/build-push-action@v2
#        with:
#          push: true
#          tags: donas/yamdb:v1.28.04.2022
#
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build_and_push_to_docker_hub
#    steps:
#    - name: executing remote ssh commands to deploy
#      uses: appleboy/ssh-action@master
#      with:
#        host: ${{ secrets.HOST }}
#        username: ${{ secrets.USER }}
#        key: ${{ secrets.SSH_KEY }}
#        passphrase: ${{ secrets.PASSPHRASE }}
#        script: |
#          sudo docker-compose stop
#          sudo docker-compose rm web
#          touch .env
#          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
#          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
#          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
#          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
#          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
#          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
#          sudo docker-compose up -d
#
#  send_message:
#    runs-on: ubuntu-latest
#    needs: deploy
#    steps:
#    - name: send message
#      uses: appleboy/telegram-action@master
#      with:
#        to: ${{ secrets.TELEGRAM_TO }}
#        token: ${{ secrets.TELEGRAM_TOKEN }}
#        message: ${{ github.workflow }} успешно выполнен!
